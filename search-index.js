var searchIndex = JSON.parse('{\
"leetcode":{"doc":"","t":[0,14,0,0,14,0,0,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,5,3,11,11,11,11,11,11,11,12,11,12,11,11,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11],"n":["common","list","offer","p","tree","linked_list","tree_node","ListNode","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from_vec","into","into_vec","new","next","to_owned","try_from","try_into","type_id","val","vec_to_list","TreeNode","borrow","borrow_mut","eq","fmt","from","from_vec","into","left","new","right","try_from","try_into","type_id","val","offer03","offer04","offer05","offer06","offer09","offer10_i","offer10_ii","offer11","offer18","offer24","offer26","offer27","offer28","offer30","offer32_i","offer32_ii","offer32_iii","offer42","offer46","offer47","offer48","offer50","offer53_i","offer53_ii","offer58","offer63","Solution","borrow","borrow_mut","find_repeat_number","from","into","try_from","try_into","type_id","Solution","borrow","borrow_mut","find_number_in2_d_array","from","into","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","replace_space","try_from","try_into","type_id","ListNode","Solution","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","into","into","next","reverse_print","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","borrow","borrow_mut","fib","from","into","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","num_ways","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","min_array","try_from","try_into","type_id","Solution","borrow","borrow_mut","delete_node","from","into","try_from","try_into","type_id","ListNode","Solution","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","into","into","next","reverse_list","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","TreeNode","borrow","borrow","borrow_mut","borrow_mut","eq","equal_structure","fmt","from","from","into","into","is_sub_structure","left","new","right","sub_structure","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","TreeNode","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","into","into","left","mirror_tree","new","right","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","TreeNode","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","into","into","is_symmetric","is_symmetric_helper","left","new","right","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","TreeNode","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","into","into","left","level_order","new","right","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","TreeNode","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","into","into","left","level_order","new","right","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","TreeNode","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","into","into","left","level_order","new","right","try_from","try_from","try_into","try_into","type_id","type_id","val","Solution","borrow","borrow_mut","from","into","max_sub_array","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","translate_num","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","max_value","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","length_of_longest_substring","try_from","try_into","type_id","Solution","borrow","borrow_mut","first_uniq_char","from","into","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","search","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","missing_number","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","reverse_left_words","try_from","try_into","type_id","Solution","borrow","borrow_mut","from","into","max_profit","try_from","try_into","type_id","p300","p509","Solution","borrow","borrow_mut","from","into","try_from","try_into","type_id","Solution","borrow","borrow_mut","fib","from","into","try_from","try_into","type_id"],"q":["leetcode","","","","","leetcode::common","","leetcode::common::linked_list","","","","","","","","","","","","","","","","","","","leetcode::common::tree_node","","","","","","","","","","","","","","","leetcode::offer","","","","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer03","","","","","","","","","leetcode::offer::offer04","","","","","","","","","leetcode::offer::offer05","","","","","","","","","leetcode::offer::offer06","","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer10_i","","","","","","","","","leetcode::offer::offer10_ii","","","","","","","","","leetcode::offer::offer11","","","","","","","","","leetcode::offer::offer18","","","","","","","","","leetcode::offer::offer24","","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer26","","","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer27","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer28","","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer32_i","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer32_ii","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer32_iii","","","","","","","","","","","","","","","","","","","","","","","leetcode::offer::offer42","","","","","","","","","leetcode::offer::offer46","","","","","","","","","leetcode::offer::offer47","","","","","","","","","leetcode::offer::offer48","","","","","","","","","leetcode::offer::offer50","","","","","","","","","leetcode::offer::offer53_i","","","","","","","","","leetcode::offer::offer53_ii","","","","","","","","","leetcode::offer::offer58","","","","","","","","","leetcode::offer::offer63","","","","","","","","","leetcode::p","","leetcode::p::p300","","","","","","","","leetcode::p::p509","","","","","","","",""],"d":["LeetCode 常用数据结构","Generate a linked list from a vec-like syntax.","剑指 offer","主站题目","Generate a tree structure from a vec-like syntax.","LeetCode 里常用单链表","LeetCode 里常用树节点","LeetCode 里常用单链表","","","","","","","Returns the argument unchanged.","从 <code>Vec&lt;i32&gt;</code> 构建链表结构。建议使用宏 <code>list!</code>","Calls <code>U::from(self)</code>.","","","","","","","","","","LeetCode 里常用树节点","","","","","Returns the argument unchanged.","从 <code>Vec&lt;Option&lt;i32&gt;&gt;</code> …","Calls <code>U::from(self)</code>.","","","","","","","","剑指 Offer 03. 数组中重复的数字","剑指 Offer 04. 二维数组中的查找","剑指 Offer 05. 替换空格","剑指 Offer 06. 从尾到头打印链表","剑指 Offer 09. 用两个栈实现队列","剑指 Offer 10- I. 斐波那契数列","剑指 Offer 10- II. 青蛙跳台阶问题","剑指 Offer 11. 旋转数组的最小数字","剑指 Offer 18. 删除链表的节点","剑指 Offer 26. 树的子结构","剑指 Offer 26. 树的子结构","剑指 Offer 27. 二叉树的镜像","剑指 Offer 28. 对称的二叉树","剑指 Offer 30. 包含 min 函数的栈","剑指 Offer 32 - I. 从上到下打印二叉树","剑指 Offer 32 - II. 从上到下打印二叉树 II","剑指 Offer 32 - III. 从上到下打印二叉树 III","剑指 Offer 42. 连续子数组的最大和","剑指 Offer 46. 把数字翻译成字符串","剑指 Offer 47. 礼物的最大价值","剑指 Offer 48. 最长不含重复字符的子字符串","剑指 Offer 50. 第一个只出现一次的字符","剑指 Offer 53 - I. 在排序数组中查找数字 I","剑指 Offer 53 - II. 0～n-1 中缺失的数字","剑指 Offer 58 - II. 左旋转字符串","剑指 Offer 63. 股票的最大利润","剑指 Offer 03. 数组中重复的数字 …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","剑指 Offer 04. 二维数组中的查找 …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","剑指 Offer 05. 替换空格 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","剑指 Offer 06. 从尾到头打印链表 …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","剑指 Offer 10- I. 斐波那契数列 …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","剑指 Offer 10- II. 青蛙跳台阶问题 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 11. 旋转数组的最小数字 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 24. 反转链表 …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","剑指 Offer 42. 连续子数组的最大和 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 46. 把数字翻译成字符串 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 47. 礼物的最大价值 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 50. 第一个只出现一次的字符 …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","剑指 Offer 53 - I. 在排序数组中查找数字 I …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 53 - II. 0～n-1 中缺失的数字 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 58 - II. 左旋转字符串 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","剑指 Offer 63. 股票的最大利润 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","最长递增子序列","斐波那契数","最长递增子序列 …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","斐波那契数 …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,0,0,27,15,27,15,15,15,15,15,27,15,27,15,15,27,15,27,15,27,15,27,15,15,0,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,0,0,32,16,32,16,16,16,16,16,32,16,32,16,16,32,16,32,16,32,16,32,16,16,0,0,33,17,33,17,17,33,17,33,17,33,17,33,17,17,17,33,33,17,33,17,33,17,17,0,0,34,18,34,18,18,18,34,18,34,18,18,34,18,18,34,18,34,18,34,18,18,0,0,35,19,35,19,19,19,35,19,35,19,35,35,19,19,19,35,19,35,19,35,19,19,0,0,36,20,36,20,20,20,36,20,36,20,20,36,20,20,36,20,36,20,36,20,20,0,0,37,21,37,21,21,21,37,21,37,21,21,37,21,21,37,21,37,21,37,21,21,0,0,38,22,38,22,22,22,38,22,38,22,22,38,22,22,38,22,38,22,38,22,22,0,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,0,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,0,0,0,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[1,3],4],[[]],[[[6,[5]]],[[8,[[7,[1]]]]]],[[]],[[[8,[[7,[1]]]]],[[6,[5]]]],[5,1],0,[[]],[[],9],[[],9],[[],10],0,[[[6,[5]]],[[8,[[7,[1]]]]]],0,[[]],[[]],[[11,11],2],[[11,3],4],[[]],[[[6,[[8,[5]]]]],[[8,[[13,[[12,[11]]]]]]]],[[]],0,[5,11],0,[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[6,[5]]],5],[[]],[[]],[[],9],[[],9],[[],10],0,[[]],[[]],[[[6,[[6,[5]]]],5],2],[[]],[[]],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[14,14],[[],9],[[],9],[[],10],0,0,[[]],[[]],[[]],[[]],[15,15],[[]],[[15,15],2],[[15,3],4],[[]],[[]],[[]],[[]],0,[[[8,[[7,[15]]]]],[[6,[5]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,[[]],[[]],[5,5],[[]],[[]],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[5,5],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[[[6,[5]]],5],[[],9],[[],9],[[],10],0,[[]],[[]],[[[8,[[7,[1]]]],5],[[8,[[7,[1]]]]]],[[]],[[]],[[],9],[[],9],[[],10],0,0,[[]],[[]],[[]],[[]],[16,16],[[]],[[16,16],2],[[16,3],4],[[]],[[]],[[]],[[]],0,[[[8,[[7,[16]]]]],[[8,[[7,[16]]]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[17,17],2],[[[8,[[13,[[12,[17]]]]]],[8,[[13,[[12,[17]]]]]]],2],[[17,3],4],[[]],[[]],[[]],[[]],[[[8,[[13,[[12,[17]]]]]],[8,[[13,[[12,[17]]]]]]],2],0,[5,17],0,[[[8,[[13,[[12,[17]]]]]],[8,[[13,[[12,[17]]]]]]],2],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[18,18],2],[[18,3],4],[[]],[[]],[[]],[[]],0,[[[8,[[13,[[12,[18]]]]]]],[[8,[[13,[[12,[18]]]]]]]],[5,18],0,[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[19,19],2],[[19,3],4],[[]],[[]],[[]],[[]],[[[8,[[13,[[12,[19]]]]]]],2],[[8,8],2],0,[5,19],0,[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[20,20],2],[[20,3],4],[[]],[[]],[[]],[[]],0,[[[8,[[13,[[12,[20]]]]]]],[[6,[5]]]],[5,20],0,[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[21,21],2],[[21,3],4],[[]],[[]],[[]],[[]],0,[[[8,[[13,[[12,[21]]]]]]],[[6,[[6,[5]]]]]],[5,21],0,[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[22,22],2],[[22,3],4],[[]],[[]],[[]],[[]],0,[[[8,[[13,[[12,[22]]]]]]],[[6,[[6,[5]]]]]],[5,22],0,[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,[[]],[[]],[[]],[[]],[[[6,[5]]],5],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[5,5],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[[[6,[[6,[5]]]]],5],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[14,5],[[],9],[[],9],[[],10],0,[[]],[[]],[14,23],[[]],[[]],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[[[6,[5]],5],5],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[[[6,[5]]],5],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[[14,5],14],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[[[6,[5]]],5],[[],9],[[],9],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],10],0,[[]],[[]],[5,5],[[]],[[]],[[],9],[[],9],[[],10]],"p":[[3,"ListNode"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i32"],[3,"Vec"],[3,"Box"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"TreeNode"],[3,"RefCell"],[3,"Rc"],[3,"String"],[3,"ListNode"],[3,"ListNode"],[3,"TreeNode"],[3,"TreeNode"],[3,"TreeNode"],[3,"TreeNode"],[3,"TreeNode"],[3,"TreeNode"],[15,"char"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"],[3,"Solution"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
